# Dr.Khaled Eskaf
# Professor of Intelligent Systems
# khaled.eskaf@mail.mcgill.ca


# ----------------------------------------
# Step 1: Import necessary libraries
# ุงุณุชูุฑุงุฏ ุงูููุชุจุงุช ุงููุงุฒูุฉ
import math                          # ููุชุจุฉ ุงูุฑูุงุถูุงุช ูุญุณุงุจ ุงูุฒุงููุฉ
import utils                         # ููู utils ูุญุชูู ุนูู ุฏุงูุฉ get_direction ูุชุญุฏูุฏ ุงุชุฌุงู ุงููุฑุฉ
from rcj_soccer_robot import RCJSoccerRobot, TIME_STEP  # ุงุณุชูุฑุงุฏ ููุงุณ ุงูุฑูุจูุช ูุงูุฒูู

# ----------------------------------------
# Step 2: Create the robot object
# ุฅูุดุงุก ูุงุฆู ุงูุฑูุจูุช ุจุงุณุชุฎุฏุงู ุงูููุงุณ RCJSoccerRobot
from controller import Robot
robot_api = Robot()                 # ูุฐุง ูู ุงูุฑูุจูุช ูู ุงููุญุงูุงุฉ
robot = RCJSoccerRobot(robot_api)  # ุชุญูููู ุฅูู ุฑูุจูุช ุฐูู ุจุงุณุชุฎุฏุงู RCJSoccerRobot

# ----------------------------------------
# Step 3: Start the main control loop
# ุจุฏุก ุงูุญููุฉ ุงูุฑุฆูุณูุฉ ููุชุญูู ูู ุงูุฑูุจูุช
while robot_api.step(TIME_STEP) != -1:

    # ----------------------------------------
    # Step 4: Check for new ball data
    # ุงูุชุญูู ูู ูุฌูุฏ ุจูุงูุงุช ุฌุฏูุฏุฉ ูู ุญุณุงุณ ุงููุฑุฉ
    if robot.is_new_ball_data():
        ball_data = robot.get_new_ball_data()  # ุงูุญุตูู ุนูู ุจูุงูุงุช ุงููุฑุฉ
    else:
        # ุฅุฐุง ูู ุชููุชุดู ุงููุฑุฉุ ุฃููู ุงูุฑูุจูุช
        # If ball is not detected, stop the robot
        robot.left_motor.setVelocity(0)
        robot.right_motor.setVelocity(0)
        print("โ Ball not detected - stopping.")
        continue  # ุงูุนูุฏุฉ ูุจุฏุงูุฉ ุงูุญููุฉ

    # ----------------------------------------
    # Step 5: Get compass angle (heading)
    # ูุฑุงุกุฉ ุฒุงููุฉ ุงูุงุชุฌุงู ูู ุงูุจูุตูุฉ (ุงูุฑุฃุณูุฉ)
    heading = robot.get_compass_heading()
    print("๐งญ Compass heading (ุฒุงููุฉ ุงูุงุชุฌุงู):", heading)

    # ----------------------------------------
    # Step 6: Get GPS position of the robot
    # ุงูุญุตูู ุนูู ูููุน ุงูุฑูุจูุช ุจุงุณุชุฎุฏุงู GPS
    robot_pos = robot.get_gps_coordinates()
    print("๐ Robot Position (ุงููููุน):", robot_pos)

    # ----------------------------------------
    # Step 7: Get sonar sensor values
    # ูุฑุงุกุฉ ููู ุญุณุงุณุงุช ุงูููุฌุงุช ููู ุงูุตูุชูุฉ
    sonar = robot.get_sonar_values()
    print("๐ Sonar values (ุงูุญุณุงุณุงุช):", sonar)

    # ----------------------------------------
    # Step 8: Compute direction of the ball
    # ุชุญุฏูุฏ ุงุชุฌุงู ุงููุฑุฉ ุจุงุณุชุฎุฏุงู ุงูุฏุงูุฉ get_direction
    direction = utils.get_direction(ball_data["direction"])
    print("โฝ Ball Direction (ุงุชุฌุงู ุงููุฑุฉ):", direction)

    # ----------------------------------------
    # Step 9: Decide movement
    # ุชุญุฏูุฏ ุญุฑูุฉ ุงูุฑูุจูุช ุจูุงุกู ุนูู ุงุชุฌุงู ุงููุฑุฉ
    if direction == 0:
        # ุงููุฑุฉ ุฃูุงู ุงูุฑูุจูุช โ ุชุญุฑู ููุฃูุงู
        # Ball in front โ Go straight
        left_speed = 7
        right_speed = 7
        print("๐ Moving Forward toward ball (ุงููุฑุฉ ุฃูุงู ุงูุฑูุจูุช)")
    elif direction == 1:
        # ุงููุฑุฉ ุนูู ุงููุณุงุฑ โ ูู ูููุณุงุฑ
        # Ball on the left โ Turn left
        left_speed = 4
        right_speed = -4
        print("โฉ๏ธ Turning LEFT toward ball (ุงููุฑุฉ ุนูู ุงููุณุงุฑ)")
    elif direction == -1:
        # ุงููุฑุฉ ุนูู ุงููููู โ ูู ูููููู
        # Ball on the right โ Turn right
        left_speed = -4
        right_speed = 4
        print("โช๏ธ Turning RIGHT toward ball (ุงููุฑุฉ ุนูู ุงููููู)")

    # ----------------------------------------
    # Step 10: Set motor speeds
    # ุฅุฑุณุงู ุงูุณุฑุนุงุช ุฅูู ุงููุญุฑูุงุช
    robot.left_motor.setVelocity(left_speed)
    robot.right_motor.setVelocity(right_speed)

    # ----------------------------------------
    # Step 11: Send message to teammates (optional)
    # ุฅุฑุณุงู ุฑุณุงูุฉ ูููุฑูู (ุงุฎุชูุงุฑู)
    robot.send_data_to_team(robot.player_id)
    print("๐ก Sending data to team (ุชู ุฅุฑุณุงู ุงูุจูุงูุงุช ุฅูู ุงููุฑูู)")
